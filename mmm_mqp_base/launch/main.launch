<launch>
  <!-- because there are multiple machines we are going to use sim time <3 -->
  <!-- <param name="/use_sim_time" value="true" /> -->
  <!-- By default, we do not start a database (it can be large) -->
  <arg name="db" default="false" />
 
  <!-- the "sim" argument controls whether we connect to a Simulated or Real robot -->
  <!--  - if sim=false, a robot_ip argument is required -->
  <arg name="sim" default="false" />
  <arg name="robot_ip" unless="$(arg sim)" default="192.168.100.100"/>

  <!-- connect the camera tf to the robot --> 
  <node pkg="tf" type="static_transform_publisher" name="world_origin" args="0.065 0 0.18 -0.349066 0 0 tool0 camera_link 100"/>
  <!-- connect our point cloud topic to the tf tree --> 
  <node pkg="tf" type="static_transform_publisher" name="mmm_pointcloud_connector" args="0 0 0 1.5708 3.14 1.5708 camera_link mmm_pointcloud_frame 100"/>

  <!-- load the robot_description parameter before launching ROS-I nodes -->
  <include file="$(find abb_irb1600_6_145_support)/launch/planning_context.launch" >
    <arg name="load_robot_description" value="true" />
  </include>

  <!-- Load Joint Names -->
  <rosparam command="load" file="$(find abb_irb1600_6_145_support)/config/joint_names_irb1600_6_145.yaml" />

  <!-- run the robot simulator and action interface nodes -->
  <group if="$(arg sim)">
    <include file="$(find industrial_robot_simulator)/launch/robot_interface_simulator.launch" />
  </group>

  <!-- run the "real robot" interface nodes -->
  <!--   - this typically includes: robot_state, motion_interface, and joint_trajectory_action nodes -->
  <!--   - replace these calls with appropriate robot-specific calls or launch files -->
  <group unless="$(arg sim)">
    <include file="$(find abb_irb1600_6_145_support)/launch/robot_interface_download_irb1600_6_145.launch" >
      <arg name="robot_ip" value="$(arg robot_ip)"/>
    </include>
  </group>

  <!-- publish the robot state (tf transforms) -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <include file="$(find abb_irb1600_6_145_support)/launch/move_group.launch">
    <arg name="publish_monitored_planning_scene" value="true" />
  </include>

  <include file="$(find abb_irb1600_6_12_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
  </include>

  <!-- load the text target sender -->  
  <node name="mmm_mqp_base_joint_sender" pkg="mmm_mqp_base" type="mmm_joint_sender.py" output="screen"/>

  <include file="$(find mmm_mqp_base)/launch/scanning.launch">
    <arg name="rviz" value="false"/>
    <arg name="sim" value="$(arg sim)"/>
  </include>
</launch>
